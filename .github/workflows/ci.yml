name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Compile TypeScript
        run: yarn run build
      - name: Upload compiler output
        uses: actions/upload-artifact@master
        with:
          name: tsc_output
          path: ./tsc_output
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Lint with XO
        run: yarn run xo
  style:
    name: Check style

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Check style with Prettier
        run: yarn run style
  test:
    name: Run unit tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Run tests
        run: yarn run test
      - name: Submit test coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  docs:
    name: Generate documentation

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Generate documentation
        run: yarn run docs
      - name: Upload documentation
        uses: actions/upload-artifact@master
        with:
          name: typedoc
          path: ./docs_out
  publish:
    name: Publish

    runs-on: ubuntu-latest

    needs: [build, lint, style, test]

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Compile TypeScript for publishing
        run: yarn run build --build tsconfig.build.json
      - name: Run semantic release
        run: yarn run semantic-release
        env:
          # Note that the secret name != the env variable name
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Run semantic release for GitHub Package Registry
        run: yarn run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_REGISTRY: /npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
